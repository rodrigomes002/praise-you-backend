// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PraiseYou.Infrastructure.EntityFramework;

namespace PraiseYou.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PraiseYou.Domain.Escalas.Escala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataEnsaio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataParticipacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Escalas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataEnsaio = new DateTime(2022, 1, 23, 11, 56, 27, 334, DateTimeKind.Local).AddTicks(6249),
                            DataParticipacao = new DateTime(2022, 1, 23, 11, 56, 27, 336, DateTimeKind.Local).AddTicks(5909)
                        });
                });

            modelBuilder.Entity("PraiseYou.Domain.Musicas.Musica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Artista")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EscalaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EscalaId");

                    b.ToTable("Musicas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Artista = "Oficina G3",
                            EscalaId = 1,
                            Nome = "O Tempo",
                            Tom = "C"
                        });
                });

            modelBuilder.Entity("PraiseYou.Domain.Musicos.Musico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EscalaId")
                        .HasColumnType("int");

                    b.Property<string>("Instrumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EscalaId");

                    b.ToTable("Musicos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EscalaId = 1,
                            Instrumento = "Guitarra",
                            Nome = "Rodrigo"
                        });
                });

            modelBuilder.Entity("PraiseYou.Domain.Musicas.Musica", b =>
                {
                    b.HasOne("PraiseYou.Domain.Escalas.Escala", "Escala")
                        .WithMany("Musicas")
                        .HasForeignKey("EscalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escala");
                });

            modelBuilder.Entity("PraiseYou.Domain.Musicos.Musico", b =>
                {
                    b.HasOne("PraiseYou.Domain.Escalas.Escala", "Escala")
                        .WithMany("Musicos")
                        .HasForeignKey("EscalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escala");
                });

            modelBuilder.Entity("PraiseYou.Domain.Escalas.Escala", b =>
                {
                    b.Navigation("Musicas");

                    b.Navigation("Musicos");
                });
#pragma warning restore 612, 618
        }
    }
}
